BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3)
BMIbybullyingstatus
View(PositivityData)
summary(PositivityData$Y)
summary(PositivityData$gAW)
PositivityData %>% group_by(Y) %>%
ggplot(aes(gAW, fill = Y)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3)
IPTWDensityPlot <- PositivityData %>% group_by(Y) %>%
ggplot(aes(gAW, fill = Y)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3)
IPTWDensityPlot
PositivityData$Y <- as.factor(PositivityData$Y)
IPTWDensityPlot <- PositivityData %>% group_by(Y) %>%
ggplot(aes(gAW, fill = Y)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3)
IPTWDensityPlot
IPTWDensityPlot <- PositivityData %>% group_by(Y) %>%
ggplot(aes(gAW, fill = Y)) +
geom_density(alpha=0.7) +
scale_fill_brewer(palette = 3) +
scale_x_continuous(limits = c(0,1)) +
xlab("Probability of AW") +
theme(legend.title=element_blank()) +
ggtitle("Density Plot of AW Probabilities By Outcome Group")
IPTWDensityPlot
IPTWDensityPlot <- PositivityData %>% group_by(Y) %>%
ggplot(aes(gAW, fill = Y)) +
geom_density(alpha=0.4) +
scale_fill_brewer(palette = 3, labels = c("No drug use", "Drug Use")) +
scale_x_continuous(limits = c(0,1)) +
xlab("Probability of AW") +
theme(legend.title=element_blank()) +
ggtitle("Density Plot of AW Probabilities By Outcome Group")
IPTWDensityPlot
gAWBox <- ggplot(aes(y=gAW)) + geom_boxplot()
gAWBox <- as.data.frame(gAW) %>% ggplot(aes(y= gAW)) + geom_boxplot()
gAWBox
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(0,0.1)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 800 Bootstrap Repetitions") +
theme(text = element_text(size = 16))
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30))
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(0,0.1)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 800 Bootstrap Repetitions") +
theme(text = element_text(size = 30))
IPTWDensityPlot <- PositivityData %>% group_by(Y) %>%
ggplot(aes(gAW, fill = Y)) +
geom_density(alpha=0.4) +
scale_fill_brewer(palette = 3, labels = c("No drug use", "Drug Use")) +
scale_x_continuous(limits = c(0,1)) +
xlab("Probability of AW") +
theme(legend.title=element_blank()) +
ggtitle("Density Plot of AW Probabilities By Outcome Group") +
theme(text = element_text(size = 30))
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(childsds)
library(epiR)
library(SuperLearner)
library(ltmle)
library(knitr)
library(tidyr)
knitr::opts_chunk$set(include = FALSE, cache = TRUE)
# First, load the data
ShelleyStephLizzyVeronicaDataLoad <- function(filename)
{
if(Sys.info()['sysname']=="Darwin"){
macfilepath <- paste("./NLSY Data/", filename, sep = "")
load(as.character(macfilepath), envir = globalenv())}
else{
if(Sys.info()['login']=="Peter"){
peterfilepath <- paste("~/Steph/GitHub/finalproject/NLSY Data/", filename, sep = "")
load(as.character(peterfilepath), envir = globalenv())}
else{
windowsfilepath <- paste("~/GitHub/finalproject/NLSY Data/", filename, sep = "")
load(as.character(windowsfilepath), envir = globalenv())
}
}
}
ShelleyStephLizzyVeronicaDataLoad("imputed_data.Rdata")
final_data <- imputed_data
rm(imputed_data)
load("BootstrappedEsts2000.RData")
#make a long data version of the bootstrapped estimates to be able to plot them together on one histogram/density plot
Bootstrapped_long <- gather(BootstrappedEsts2000, Estimator, value, gCompBoot:IPTWboot)
BootstrappedEsts2000 <- as.data.frame(BootstrappedEsts2000)
#make a long data version of the bootstrapped estimates to be able to plot them together on one histogram/density plot
Bootstrapped_long <- gather(BootstrappedEsts2000, Estimator, value, gCompBoot:IPTWboot)
BootstrappedEsts2000 <- as.data.frame(BootstrappedEsts2000, gCompBoot = V1, IPTWboot = V2)
load("BootstrappedEsts2000.RData")
BootstrappedEsts2000 <- as.data.frame(BootstrappedEsts2000, gCompBoot = V1, IPTWboot = V2)
load("BootstrappedEsts2000.RData")
BootstrappedEsts2000 <- as.data.frame(BootstrappedEsts2000, "gCompBoot" = V1, "IPTWboot" = V2)
BootstrappedEsts2000 <- BootstrappedEsts2000  %>% rename("gCompBoot" = V1, "IPTWboot" = V2)
Bootstrapped_long <- gather(BootstrappedEsts2000, Estimator, value, gCompBoot:IPTWboot)
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(0,0.1)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 800 Bootstrap Repetitions") +
theme(text = element_text(size = 30))
BootstrappedHist
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(0,0.1)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 2000 Bootstrap Repetitions") +
theme(text = element_text(size = 26))
BootstrappedHist
CIs <-matrix(rep(NA, 6), nrow = 2, ncol = 2)
for (c in 1:2){
CI.quant  <- quantile(BootstrappedEsts2000[ ,c], prob=c(0.025,0.975))
CIs[c,] <- CI.quant
}
rownames(CIs) <-c("Gcomp","IPTW")
colnames(CIs) <-c("95% CI Lower Limit", "95% CI Upper Limit")
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(0,0.1)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 2000 Bootstrap Repetitions") +
theme(text = element_text(size = 26))
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(0,0.12)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 2000 Bootstrap Repetitions") +
theme(text = element_text(size = 26))
BootstrappedHist
BootstrappedHist
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(0,0.14)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 2000 Bootstrap Repetitions") +
theme(text = element_text(size = 26))
BootstrappedHist
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(-0.1,0.14)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 2000 Bootstrap Repetitions") +
theme(text = element_text(size = 26))
BootstrappedHist
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(-0.02,0.12)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 2000 Bootstrap Repetitions") +
theme(text = element_text(size = 26))
BootstrappedHist
BootstrappedHist
BootstrappedHist <- Bootstrapped_long %>% group_by(Estimator) %>%
ggplot(aes(value, fill = Estimator)) +
geom_histogram(color = "black", binwidth = 0.0005, size = 0.1) +
scale_fill_brewer(palette = 5, labels = c("G-comp", "IPTW")) +
scale_x_continuous(limits = c(-0.04,0.12)) +
xlab("Average Treatment Effect Value") +
theme(legend.title=element_blank()) +
ggtitle("Histograms of G-comp and IPTW Estimands \n From 2000 Bootstrap Repetitions") +
theme(text = element_text(size = 26))
BootstrappedHist
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank())
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(2, 'lines'), legend.spacing = unit(0.5, 'cm'))
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(childsds)
library(epiR)
library(SuperLearner)
library(ltmle)
library(knitr)
library(tidyr)
knitr::opts_chunk$set(include = FALSE, cache = TRUE)
# First, load the data
ShelleyStephLizzyVeronicaDataLoad <- function(filename)
{
if(Sys.info()['sysname']=="Darwin"){
macfilepath <- paste("./NLSY Data/", filename, sep = "")
load(as.character(macfilepath), envir = globalenv())}
else{
if(Sys.info()['login']=="Peter"){
peterfilepath <- paste("~/Steph/GitHub/finalproject/NLSY Data/", filename, sep = "")
load(as.character(peterfilepath), envir = globalenv())}
else{
windowsfilepath <- paste("~/GitHub/finalproject/NLSY Data/", filename, sep = "")
load(as.character(windowsfilepath), envir = globalenv())
}
}
}
ShelleyStephLizzyVeronicaDataLoad("imputed_data.Rdata")
final_data <- imputed_data
rm(imputed_data)
#Let's do all Variable prep/Data cleaning in this chunk
#some cleaning of variables to rename levels for ease of visualization
final_data$bullied_bf_12_1997 <- as.factor(final_data$bullied_bf_12_1997)
final_data$bullied_bf_12_1997 <- revalue(final_data$bullied_bf_12_1997,
c("0"="NotBullied", "1"="Bullied"))
final_data$ever_new_user2 <- as.factor(final_data$ever_new_user2)
final_data$ever_new_user2 <- revalue( final_data$ever_new_user2,
c("0" = "NoDrugUse", "1" = "DrugUse"))
final_data$KEY_RACE_ETHNICITY_1997 <- as.factor(final_data$KEY_RACE_ETHNICITY_1997)
final_data$KEY_RACE_ETHNICITY_1997 <- revalue(final_data$KEY_RACE_ETHNICITY_1997,
c("1"="Black", "2"="Hispanic", "3"="MixedRace", "4"="White"))
#Decision was made to remove the Mixed Race group due to small numbers
final_data <- final_data %>% filter(KEY_RACE_ETHNICITY_1997 != "MixedRace")
final_data$KEY_RACE_ETHNICITY_1997 <- droplevels(final_data$KEY_RACE_ETHNICITY_1997) #takes away the empty category
final_data$KEY_SEX_1997 <- as.factor(final_data$KEY_SEX_1997)
final_data$KEY_SEX_1997 <- revalue(final_data$KEY_SEX_1997,
c("1"="M", "2"="F"))
final_data$anySameSex <- as.factor(final_data$anySameSex)
final_data$anySameSex <- revalue(final_data$anySameSex, c("FALSE" = "NoSameSex", "TRUE" = "SomeSameSex"))
final_data$learning_disability_1997 <- as.factor(final_data$learning_disability_1997)
final_data$learning_disability_1997  <- revalue(final_data$learning_disability_1997 , c("0" = "NoLearningDisability", "1" = "LearningDisability"))
final_data$CV_CITIZENSHIP_1997 <- as.factor(final_data$CV_CITIZENSHIP_1997)
final_data$CV_CITIZENSHIP_1997 <- revalue(final_data$CV_CITIZENSHIP_1997, c("1"="BornInUS", "2"="NotBornInUS", "3"="BirthplaceUnknown"))
final_data$anySameSex <- as.factor(final_data$anySameSex)
final_data$anySameSex <- revalue(final_data$anySameSex, c("1"="SameSex", "0"="NoSameSex"))
final_data$YOUTH_BOTHBIO.01_1997 <- as.factor(final_data$YOUTH_BOTHBIO.01_1997)
final_data$YOUTH_BOTHBIO.01_1997 <- revalue(final_data$YOUTH_BOTHBIO.01_1997, c("1"="LivesWBothBioParents", "0"="DoesntLiveWBioParents"))
final_data$overweight <- as.factor(final_data$overweight)
final_data$overweight <- revalue(final_data$overweight, c("0"="NotOverweight", "1"="Overweight"))
#Categorizing the Maternal Education variable
final_data$MomEducation <- NA
final_data$MomEducation[final_data$CV_HGC_BIO_MOM_1997 < 12] <- 0
final_data$MomEducation[final_data$CV_HGC_BIO_MOM_1997 == 12] <- 1
final_data$MomEducation[final_data$CV_HGC_BIO_MOM_1997 > 12] <- 2
final_data$MomEducation <-as.factor(final_data$MomEducation)
final_data$MomEducation <- revalue(final_data$MomEducation, c("0"="LessThanHigh", "1"="HighSchlGrad", "2"="SomeCollege"))
#dichotomous version of maternal education variable
final_data$MomEduDi <- NA
final_data$MomEduDi[final_data$CV_HGC_BIO_MOM_1997 < 12] <- 1
final_data$MomEduDi[final_data$CV_HGC_BIO_MOM_1997 == 12] <- 1
final_data$MomEduDi[final_data$CV_HGC_BIO_MOM_1997 > 12] <- 2
final_data$MomEduDi <-as.factor(final_data$MomEduDi)
final_data$MomEduDi <- revalue(final_data$MomEduDi, c("1"="HighSchlOrLess", "2"="SomeCollege"))
#Using CDC growth charts (via childsds package) to get BMI Z scores by age
final_data <-  final_data %>%
mutate(bmiz = sds(BMI,
age = KEY_AGE_1997,
sex = KEY_SEX_1997, male = "M", female =  "F",
ref = cdc.ref,
item = "bmi",
type = "SDS"))
#Note, there's one observation with a z score of -20, and some with -Inf (9 observations total)
#final_data %>% ggplot(aes(y=bmiz)) +geom_boxplot() #can uncomment this line to see the boxplot if desired
#We decided to exclude those 9 subjects, so
final_data <-  final_data %>% filter(bmiz> -15)
#Overweight variable based on pediatric criteria
final_data$PediOverweight<-"NotOverweight"
final_data$PediOverweight[final_data$bmiz > 1.036433] <-"Overweight" #because z of 1.036433 corresponds to 85th percentile, which is the definition of overweight in kids
final_data$PediOverweight <- as.factor(final_data$PediOverweight)
save(final_data, file = "final_data_BMIz.RData")
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(childsds)
library(epiR)
library(SuperLearner)
library(ltmle)
library(knitr)
library(tidyr)
knitr::opts_chunk$set(include = FALSE, cache = TRUE)
# First, load the data
ShelleyStephLizzyVeronicaDataLoad <- function(filename)
{
if(Sys.info()['sysname']=="Darwin"){
macfilepath <- paste("./NLSY Data/", filename, sep = "")
load(as.character(macfilepath), envir = globalenv())}
else{
if(Sys.info()['login']=="Peter"){
peterfilepath <- paste("~/Steph/GitHub/finalproject/NLSY Data/", filename, sep = "")
load(as.character(peterfilepath), envir = globalenv())}
else{
windowsfilepath <- paste("~/GitHub/finalproject/NLSY Data/", filename, sep = "")
load(as.character(windowsfilepath), envir = globalenv())
}
}
}
ShelleyStephLizzyVeronicaDataLoad("imputed_data.Rdata")
final_data <- imputed_data
rm(imputed_data)
#Let's do all Variable prep/Data cleaning in this chunk
#some cleaning of variables to rename levels for ease of visualization
final_data$bullied_bf_12_1997 <- as.factor(final_data$bullied_bf_12_1997)
final_data$bullied_bf_12_1997 <- revalue(final_data$bullied_bf_12_1997,
c("0"="NotBullied", "1"="Bullied"))
final_data$ever_new_user2 <- as.factor(final_data$ever_new_user2)
final_data$ever_new_user2 <- revalue( final_data$ever_new_user2,
c("0" = "NoDrugUse", "1" = "DrugUse"))
final_data$KEY_RACE_ETHNICITY_1997 <- as.factor(final_data$KEY_RACE_ETHNICITY_1997)
final_data$KEY_RACE_ETHNICITY_1997 <- revalue(final_data$KEY_RACE_ETHNICITY_1997,
c("1"="Black", "2"="Hispanic", "3"="MixedRace", "4"="White"))
#Decision was made to remove the Mixed Race group due to small numbers
final_data <- final_data %>% filter(KEY_RACE_ETHNICITY_1997 != "MixedRace")
final_data$KEY_RACE_ETHNICITY_1997 <- droplevels(final_data$KEY_RACE_ETHNICITY_1997) #takes away the empty category
final_data$KEY_SEX_1997 <- as.factor(final_data$KEY_SEX_1997)
final_data$KEY_SEX_1997 <- revalue(final_data$KEY_SEX_1997,
c("1"="M", "2"="F"))
final_data$anySameSex <- as.factor(final_data$anySameSex)
final_data$anySameSex <- revalue(final_data$anySameSex, c("FALSE" = "NoSameSex", "TRUE" = "SomeSameSex"))
final_data$learning_disability_1997 <- as.factor(final_data$learning_disability_1997)
final_data$learning_disability_1997  <- revalue(final_data$learning_disability_1997 , c("0" = "NoLearningDisability", "1" = "LearningDisability"))
final_data$CV_CITIZENSHIP_1997 <- as.factor(final_data$CV_CITIZENSHIP_1997)
final_data$CV_CITIZENSHIP_1997 <- revalue(final_data$CV_CITIZENSHIP_1997, c("1"="BornInUS", "2"="NotBornInUS", "3"="BirthplaceUnknown"))
final_data$anySameSex <- as.factor(final_data$anySameSex)
final_data$anySameSex <- revalue(final_data$anySameSex, c("1"="SameSex", "0"="NoSameSex"))
final_data$YOUTH_BOTHBIO.01_1997 <- as.factor(final_data$YOUTH_BOTHBIO.01_1997)
final_data$YOUTH_BOTHBIO.01_1997 <- revalue(final_data$YOUTH_BOTHBIO.01_1997, c("1"="LivesWBothBioParents", "0"="DoesntLiveWBioParents"))
final_data$overweight <- as.factor(final_data$overweight)
final_data$overweight <- revalue(final_data$overweight, c("0"="NotOverweight", "1"="Overweight"))
#Categorizing the Maternal Education variable
final_data$MomEducation <- NA
final_data$MomEducation[final_data$CV_HGC_BIO_MOM_1997 < 12] <- 0
final_data$MomEducation[final_data$CV_HGC_BIO_MOM_1997 == 12] <- 1
final_data$MomEducation[final_data$CV_HGC_BIO_MOM_1997 > 12] <- 2
final_data$MomEducation <-as.factor(final_data$MomEducation)
final_data$MomEducation <- revalue(final_data$MomEducation, c("0"="LessThanHigh", "1"="HighSchlGrad", "2"="SomeCollege"))
#dichotomous version of maternal education variable
final_data$MomEduDi <- NA
final_data$MomEduDi[final_data$CV_HGC_BIO_MOM_1997 < 12] <- 1
final_data$MomEduDi[final_data$CV_HGC_BIO_MOM_1997 == 12] <- 1
final_data$MomEduDi[final_data$CV_HGC_BIO_MOM_1997 > 12] <- 2
final_data$MomEduDi <-as.factor(final_data$MomEduDi)
final_data$MomEduDi <- revalue(final_data$MomEduDi, c("1"="HighSchlOrLess", "2"="SomeCollege"))
#Using CDC growth charts (via childsds package) to get BMI Z scores by age
final_data <-  final_data %>%
mutate(bmiz = sds(BMI,
age = KEY_AGE_1997,
sex = KEY_SEX_1997, male = "M", female =  "F",
ref = cdc.ref,
item = "bmi",
type = "SDS"))
#Note, there's one observation with a z score of -20, and some with -Inf (9 observations total)
#final_data %>% ggplot(aes(y=bmiz)) +geom_boxplot() #can uncomment this line to see the boxplot if desired
#We decided to exclude those 9 subjects, so
final_data <-  final_data %>% filter(bmiz> -15)
#Overweight variable based on pediatric criteria
final_data$PediOverweight<-"NotOverweight"
final_data$PediOverweight[final_data$bmiz > 1.036433] <-"Overweight" #because z of 1.036433 corresponds to 85th percentile, which is the definition of overweight in kids
final_data$PediOverweight <- as.factor(final_data$PediOverweight)
save(final_data, file = "final_data_BMIz.RData")
#just sexual orientation with exp/out. (Note that variables are releveled to put it into the format that epiR wants)
SexOrientTable <- table(relevel(final_data$bullied_bf_12_1997,2),relevel(final_data$ever_new_user2, 2),
final_data$anySameSex,
useNA="ifany")
#calculating test of homogeneity between strata of sexual orientation
epi.2by2(SexOrientTable)
#decision made to not use this variable based on small numbers, and no association with the measures of disease (looking at a test of homogeneity between strata)
#just learning/emotional problem with exp/out
LearningTable <- table(relevel(final_data$bullied_bf_12_1997,2),relevel(final_data$ever_new_user2, 2),
final_data$learning_disability_1997,
useNA="ifany")
#calculating test of homogeneity between strata of Learning/Emotional problems
epi.2by2(LearningTable)
#decision made to not use this variable because its learning or emotional problem at the time of the study (age 12-18), so this may not be temporally before the exposure and could actually be caused by exposure
#just citizenship with exp/out
CitizenTable <-table(relevel(final_data$bullied_bf_12_1997,2),relevel(final_data$ever_new_user2, 2),
final_data$CV_CITIZENSHIP_1997,
useNA="ifany")
#calculating test of homogeneity between strata of Citizenship (aka birthplace)
epi.2by2(CitizenTable)
#decision made to not use this variable because so few children were born outside the US and we're not sure if birthplace is really getting at the SES/hardship construct that we were trying to get with citizenship data
#Our set of variables
table(final_data$bullied_bf_12_1997,final_data$ever_new_user2,
final_data$KEY_RACE_ETHNICITY_1997,  final_data$KEY_SEX_1997,
final_data$MomEduDi,
final_data$PediOverweight, final_data$YOUTH_BOTHBIO.01_1997,
useNA="ifany")
#same set but no PediOverweight variable (considering it as a continuous instead)
table(final_data$bullied_bf_12_1997,final_data$ever_new_user2,
final_data$KEY_RACE_ETHNICITY_1997,  final_data$KEY_SEX_1997,
final_data$MomEduDi,
final_data$YOUTH_BOTHBIO.01_1997,
useNA="ifany")
#Density Plots for BMI
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(2, 'lines'), legend.spacing = unit(0.5, 'cm'))
#BMIbybullyingstatus
ggsave("BMIbybullyingstatus.pdf", BMIbybullyingstatus)
#Boxplots for BMI
BMIbybullyingstatusBox <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(y=bmiz, fill = bullied_bf_12_1997)) +
geom_boxplot()
#BMIbybullyingstatusBox
ggsave("BMIbybullyingstatusBox.pdf", BMIbybullyingstatusBox)
BMIbybullyingstatus
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(2, 'lines'), legend.spacing = unit(1, 'cm'))
BMIbybullyingstatus
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(2, 'lines'), legend.spacing.x = unit(1, 'cm'), legend.spacing.y = unit(1, 'cm'))
BMIbybullyingstatus
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(2, 'lines'), legend.spacing.x = unit(1, 'cm'), margin = margin(l = 30, unit = "pt"))
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(2, 'lines'), legend.spacing.x = unit(1, 'cm'), legend.text = element_text(
margin = margin(l = 30, unit = "pt")))
BMIbybullyingstatus
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(2, 'lines'), legend.spacing.x = unit(1, 'cm'))
BMIbybullyingstatus
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(2, 'lines'), legend.spacing.x = unit(1, 'cm')) +
labs(x = "BMI Z-score for Age and Sex")
BMIbybullyingstatus
BMIbybullyingstatus <- final_data %>% filter(bmiz> -15) %>%
group_by( bullied_bf_12_1997) %>%
ggplot(aes(bmiz, fill = bullied_bf_12_1997)) +
geom_density(alpha=0.9) +
scale_fill_brewer(palette = 3) +
theme(text = element_text(size = 30)) +
theme(legend.title=element_blank(), legend.key.size = unit(1, 'lines'), legend.spacing.x = unit(1, 'cm'), legend.spacing.y = unit(2, 'lines')) +
labs(x = "BMI Z-score for Age and Sex")
BMIbybullyingstatus
